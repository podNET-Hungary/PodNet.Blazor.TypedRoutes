// <auto-generated />
#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using PodNet.Blazor.TypedRoutes;
using static System.FormattableString;

namespace _2_MultipleRoutes
{
    partial class MyComponent : IRoutableComponent, INavigableComponent
    {
        /// <summary>
        /// The primary route template for the component, the constant string <c>"/other-pages/{*catchAll}"</c>.
        /// </summary>
        public static string PageRouteTemplate => "/other-pages/{*catchAll}";

        /// <summary>
        /// All available route templates for the component, containing the strings: <c>"/items/{id}"</c>, <c>"/items/{category}/{id:int}"</c>, <c>"/items/{from:datetime}/{to:datetime?}"</c>, <c>"/other-pages/{*catchAll}"</c>.
        /// </summary>
        public static IReadOnlyList<string> AllPageRouteTemplates { get; } = ImmutableArray.Create("/items/{id}", "/items/{category}/{id:int}", "/items/{from:datetime}/{to:datetime?}", "/other-pages/{*catchAll}");

        /// <summary>
        /// Returns the absolute page URI: <c>"/other-pages"</c>.
        /// </summary>
        public static string PageUri => "/other-pages";

        /// <summary>
        /// Returns the URI for the page constructed from the template <c>"/items/{id}"</c> with
        /// the provided parameters.
        /// </summary>
        public static string PageUri1(string id) => Invariant($"/items/{Uri.EscapeDataString(id)}");
        
        /// <summary>
        /// Returns the URI for the page constructed from the template <c>"/items/{category}/{id:int}"</c> with
        /// the provided parameters.
        /// </summary>
        public static string PageUri2(string category, int id) => Invariant($"/items/{Uri.EscapeDataString(category)}/{id}");
        
        /// <summary>
        /// Returns the URI for the page constructed from the template <c>"/items/{from:datetime}/{to:datetime?}"</c> with
        /// the provided parameters.
        /// </summary>
        public static string PageUri3(DateTime from, DateTime? to = null) => Invariant($"/items/{from.ToString(from.TimeOfDay == default ? "yyyy-MM-dd" : "s")}/{to?.ToString(to.Value.TimeOfDay == default ? "yyyy-MM-dd" : "s")}");
        
        /// <summary>
        /// Returns the URI for the page constructed from the template <c>"/other-pages/{*catchAll}"</c> with
        /// the provided parameters.
        /// </summary>
        public static string PageUri4(string? catchAll = null) => Invariant($"/other-pages/{(catchAll == null ? null : Uri.UnescapeDataString(catchAll))}");
    }
}
#nullable restore
