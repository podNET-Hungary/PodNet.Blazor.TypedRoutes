// <auto-generated />
#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using PodNet.Blazor.TypedRoutes;
using static System.FormattableString;

namespace PodNet.Blazor.TypedRoutes.Sample.Pages.Examples
{
    partial class CatchAll : IRoutableComponent, INavigableComponent
    {
        /// <summary>
        /// The primary route template for the component, the constant string <c>"/examples/catch-all/{*catchAll}"</c>.
        /// </summary>
        public static string PageRouteTemplate => "/examples/catch-all/{*catchAll}";
    
        /// <summary>
        /// All available route templates for the component, containing the string: <c>"/examples/catch-all/{*catchAll}"</c>.
        /// </summary>
        public static IReadOnlyList<string> AllPageRouteTemplates { get; } = ImmutableArray.Create("/examples/catch-all/{*catchAll}");

        /// <summary>
        /// Returns the absolute page URI: <c>"/examples/catch-all"</c>.
        /// </summary>
        public static string PageUri => "/examples/catch-all";

        /// <summary>
        /// Returns the URI for the page constructed from the template <c>"/examples/catch-all/{*catchAll}"</c> with
        /// the provided parameters, using the invariant culture.
        /// </summary>
        public static string PageUri1(string? catchAll = null) => Invariant($"/examples/catch-all/{(catchAll == null ? null : Uri.UnescapeDataString(catchAll))}");
            
    }
}
#nullable restore
